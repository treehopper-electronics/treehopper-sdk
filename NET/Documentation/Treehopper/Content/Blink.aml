<?xml version="1.0" encoding="utf-8"?>
<topic id="cb177f8a-15d0-4ad0-8cd2-2dd3c83b90d9" revisionNumber="1">
  <developerHowToDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

    <introduction>
      <para>Blinking an LED is the embedded programming equivalent of printing "Hello, world!" — let's 
      go through the fundamentals of obtaining a reference to a board, connecting it, and performing basic opertions on it.</para>
    </introduction>

    <procedure>
      <title>Create a Console project</title>
      <steps class="ordered">
        <step>
          <content>
            <para>In Visual Studio, create a new Visual C# Console Application project.</para>
            <mediaLink>
              <image xlink:href="4cfacbe8-d100-471c-9d69-1dbcce50e316"/>
            </mediaLink>
          </content>
        </step>
      </steps>
    </procedure>

    <procedure>
      <title>Import appropriate namespaces</title>
      <steps class="ordered">
        <step>
          <content>
            <para>All basic Treehopper functionality lives in the <codeEntityReference>N:Treehopper</codeEntityReference> namespace.</para>
            <codeReference>Connect#Namespace</codeReference>
          </content>
        </step>
        <step>
          <content>
            <para>Second step</para>
          </content>
        </step>
      </steps>
      <!-- <conclusion>Optional conclusion</conclusion> -->
    </procedure>



    <codeExample>
        <code source="..\..\Demos\Console\Blink\Program.cs" language="csharp" />
    </codeExample>
    
    <!-- <codeExample>Optional code example</codeExample> -->

    <!-- <buildInstructions>Optional instructions for building a
         code example.</buildInstructions> -->

    <!-- <robustProgramming>Optional discussion of error handling and other
         issues related to writing solid code.</robustProgramming> -->

    <!-- <security>Optional discussion of security issues.</security> -->

    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID">Link text</link>
      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>
      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on GitHub</linkText>
          <linkAlternateText>Go to GitHub</linkAlternateText>
          <linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerHowToDocument>
</topic>
