/// This file was auto-generated by RegisterGenerator. Any changes to it will be overwritten!
package io.treehopper.libraries.sensors.inertial.lis3dsh;

import io.treehopper.libraries.IRegisterManagerAdapter;
import io.treehopper.libraries.RegisterManager;
import io.treehopper.libraries.Register;
import java.util.Arrays;

class Lis3dshRegisters extends RegisterManager
{
    Lis3dshRegisters(IRegisterManagerAdapter adapter)
    {
        super(adapter);
        outT = new OutTRegister(this);
        _registers.add(outT);
        info1 = new Info1Register(this);
        _registers.add(info1);
        info2 = new Info2Register(this);
        _registers.add(info2);
        whoAmI = new WhoAmIRegister(this);
        _registers.add(whoAmI);
        offX = new OffXRegister(this);
        _registers.add(offX);
        offY = new OffYRegister(this);
        _registers.add(offY);
        offZ = new OffZRegister(this);
        _registers.add(offZ);
        csX = new CsXRegister(this);
        _registers.add(csX);
        csY = new CsYRegister(this);
        _registers.add(csY);
        csZ = new CsZRegister(this);
        _registers.add(csZ);
        lc = new LcRegister(this);
        _registers.add(lc);
        stat = new StatRegister(this);
        _registers.add(stat);
        peak1 = new Peak1Register(this);
        _registers.add(peak1);
        peak2 = new Peak2Register(this);
        _registers.add(peak2);
        vfc1 = new Vfc1Register(this);
        _registers.add(vfc1);
        vfc2 = new Vfc2Register(this);
        _registers.add(vfc2);
        vfc3 = new Vfc3Register(this);
        _registers.add(vfc3);
        vfc4 = new Vfc4Register(this);
        _registers.add(vfc4);
        thrs3 = new Thrs3Register(this);
        _registers.add(thrs3);
        ctrlReg4 = new CtrlReg4Register(this);
        _registers.add(ctrlReg4);
        ctrlReg1 = new CtrlReg1Register(this);
        _registers.add(ctrlReg1);
        ctrlReg2 = new CtrlReg2Register(this);
        _registers.add(ctrlReg2);
        ctrlReg3 = new CtrlReg3Register(this);
        _registers.add(ctrlReg3);
        ctrlReg5 = new CtrlReg5Register(this);
        _registers.add(ctrlReg5);
        ctrlReg6 = new CtrlReg6Register(this);
        _registers.add(ctrlReg6);
        status = new StatusRegister(this);
        _registers.add(status);
        outX = new OutXRegister(this);
        _registers.add(outX);
        outY = new OutYRegister(this);
        _registers.add(outY);
        outZ = new OutZRegister(this);
        _registers.add(outZ);
        fifoCtrl = new FifoCtrlRegister(this);
        _registers.add(fifoCtrl);
        fifoSrc = new FifoSrcRegister(this);
        _registers.add(fifoSrc);
    }

    OutTRegister outT;
    Info1Register info1;
    Info2Register info2;
    WhoAmIRegister whoAmI;
    OffXRegister offX;
    OffYRegister offY;
    OffZRegister offZ;
    CsXRegister csX;
    CsYRegister csY;
    CsZRegister csZ;
    LcRegister lc;
    StatRegister stat;
    Peak1Register peak1;
    Peak2Register peak2;
    Vfc1Register vfc1;
    Vfc2Register vfc2;
    Vfc3Register vfc3;
    Vfc4Register vfc4;
    Thrs3Register thrs3;
    CtrlReg4Register ctrlReg4;
    CtrlReg1Register ctrlReg1;
    CtrlReg2Register ctrlReg2;
    CtrlReg3Register ctrlReg3;
    CtrlReg5Register ctrlReg5;
    CtrlReg6Register ctrlReg6;
    StatusRegister status;
    OutXRegister outX;
    OutYRegister outY;
    OutZRegister outZ;
    FifoCtrlRegister fifoCtrl;
    FifoSrcRegister fifoSrc;

    class OutTRegister extends Register
    {
        OutTRegister(RegisterManager regManager) { super(regManager, 0x0c, 1, false); }

        int value;


        public OutTRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFF);
        }
    }
    class Info1Register extends Register
    {
        Info1Register(RegisterManager regManager) { super(regManager, 0x0d, 1, false); }

        int value;


        public Info1Register read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFF);
        }
    }
    class Info2Register extends Register
    {
        Info2Register(RegisterManager regManager) { super(regManager, 0x0e, 1, false); }

        int value;


        public Info2Register read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFF);
        }
    }
    class WhoAmIRegister extends Register
    {
        WhoAmIRegister(RegisterManager regManager) { super(regManager, 0x0f, 1, false); }

        int value;


        public WhoAmIRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFF);
        }
    }
    class OffXRegister extends Register
    {
        OffXRegister(RegisterManager regManager) { super(regManager, 0x10, 1, false); }

        int value;


        public OffXRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFF);
        }
    }
    class OffYRegister extends Register
    {
        OffYRegister(RegisterManager regManager) { super(regManager, 0x11, 1, false); }

        int value;


        public OffYRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFF);
        }
    }
    class OffZRegister extends Register
    {
        OffZRegister(RegisterManager regManager) { super(regManager, 0x12, 1, false); }

        int value;


        public OffZRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFF);
        }
    }
    class CsXRegister extends Register
    {
        CsXRegister(RegisterManager regManager) { super(regManager, 0x13, 1, false); }

        int value;


        public CsXRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFF);
        }
    }
    class CsYRegister extends Register
    {
        CsYRegister(RegisterManager regManager) { super(regManager, 0x14, 1, false); }

        int value;


        public CsYRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFF);
        }
    }
    class CsZRegister extends Register
    {
        CsZRegister(RegisterManager regManager) { super(regManager, 0x15, 1, false); }

        int value;


        public CsZRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFF);
        }
    }
    class LcRegister extends Register
    {
        LcRegister(RegisterManager regManager) { super(regManager, 0x16, 2, false); }

        int value;


        public LcRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFFFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFFFF);
        }
    }
    class StatRegister extends Register
    {
        StatRegister(RegisterManager regManager) { super(regManager, 0x18, 1, false); }

        int drdy;
        int dor;
        int intSm2;
        int intSm1;
        int sync2;
        int sync1;
        int syncw;
        int longInterrupt;


        public StatRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((drdy & 0x1) << 0) | ((dor & 0x1) << 1) | ((intSm2 & 0x1) << 2) | ((intSm1 & 0x1) << 3) | ((sync2 & 0x1) << 4) | ((sync1 & 0x1) << 5) | ((syncw & 0x1) << 6) | ((longInterrupt & 0x1) << 7); }
        public void setValue(long _value)
        {
            drdy = (int)((_value >> 0) & 0x1);
            dor = (int)((_value >> 1) & 0x1);
            intSm2 = (int)((_value >> 2) & 0x1);
            intSm1 = (int)((_value >> 3) & 0x1);
            sync2 = (int)((_value >> 4) & 0x1);
            sync1 = (int)((_value >> 5) & 0x1);
            syncw = (int)((_value >> 6) & 0x1);
            longInterrupt = (int)((_value >> 7) & 0x1);
        }
    }
    class Peak1Register extends Register
    {
        Peak1Register(RegisterManager regManager) { super(regManager, 0x19, 1, false); }

        int value;


        public Peak1Register read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFF);
        }
    }
    class Peak2Register extends Register
    {
        Peak2Register(RegisterManager regManager) { super(regManager, 0x1A, 1, false); }

        int value;


        public Peak2Register read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFF);
        }
    }
    class Vfc1Register extends Register
    {
        Vfc1Register(RegisterManager regManager) { super(regManager, 0x1b, 1, false); }

        int value;


        public Vfc1Register read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFF);
        }
    }
    class Vfc2Register extends Register
    {
        Vfc2Register(RegisterManager regManager) { super(regManager, 0x1c, 1, false); }

        int value;


        public Vfc2Register read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFF);
        }
    }
    class Vfc3Register extends Register
    {
        Vfc3Register(RegisterManager regManager) { super(regManager, 0x1d, 1, false); }

        int value;


        public Vfc3Register read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFF);
        }
    }
    class Vfc4Register extends Register
    {
        Vfc4Register(RegisterManager regManager) { super(regManager, 0x1e, 1, false); }

        int value;


        public Vfc4Register read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFF);
        }
    }
    class Thrs3Register extends Register
    {
        Thrs3Register(RegisterManager regManager) { super(regManager, 0x1f, 1, false); }

        int value;


        public Thrs3Register read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFF);
        }
    }
    class CtrlReg4Register extends Register
    {
        CtrlReg4Register(RegisterManager regManager) { super(regManager, 0x20, 1, false); }

        int xen;
        int yen;
        int zen;
        int bdu;
        int outputDataRate;

                public OutputDataRates getOutputDataRate() { for (OutputDataRates b : OutputDataRates.values()) { if(b.getVal() == outputDataRate) return b; } return OutputDataRates.values()[0]; }
                public void setOutputDataRate(OutputDataRates enumVal) { outputDataRate = enumVal.getVal(); }

        public CtrlReg4Register read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((xen & 0x1) << 0) | ((yen & 0x1) << 1) | ((zen & 0x1) << 2) | ((bdu & 0x1) << 3) | ((outputDataRate & 0xF) << 4); }
        public void setValue(long _value)
        {
            xen = (int)((_value >> 0) & 0x1);
            yen = (int)((_value >> 1) & 0x1);
            zen = (int)((_value >> 2) & 0x1);
            bdu = (int)((_value >> 3) & 0x1);
            outputDataRate = (int)((_value >> 4) & 0xF);
        }
    }
    class CtrlReg1Register extends Register
    {
        CtrlReg1Register(RegisterManager regManager) { super(regManager, 0x21, 1, false); }

        int sm1En;
        int sm1Pin;
        int Hyst1;


        public CtrlReg1Register read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((sm1En & 0x1) << 0) | ((sm1Pin & 0x1) << 3) | ((Hyst1 & 0x7) << 5); }
        public void setValue(long _value)
        {
            sm1En = (int)((_value >> 0) & 0x1);
            sm1Pin = (int)((_value >> 3) & 0x1);
            Hyst1 = (int)((_value >> 5) & 0x7);
        }
    }
    class CtrlReg2Register extends Register
    {
        CtrlReg2Register(RegisterManager regManager) { super(regManager, 0x22, 1, false); }

        int sm2En;
        int sm2Pin;
        int Hyst2;


        public CtrlReg2Register read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((sm2En & 0x1) << 0) | ((sm2Pin & 0x1) << 3) | ((Hyst2 & 0x7) << 5); }
        public void setValue(long _value)
        {
            sm2En = (int)((_value >> 0) & 0x1);
            sm2Pin = (int)((_value >> 3) & 0x1);
            Hyst2 = (int)((_value >> 5) & 0x7);
        }
    }
    class CtrlReg3Register extends Register
    {
        CtrlReg3Register(RegisterManager regManager) { super(regManager, 0x23, 1, false); }

        int strt;
        int vfilt;
        int int1En;
        int int2En;
        int iel;
        int iea;
        int drEn;


        public CtrlReg3Register read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((strt & 0x1) << 0) | ((vfilt & 0x1) << 2) | ((int1En & 0x1) << 3) | ((int2En & 0x1) << 4) | ((iel & 0x1) << 5) | ((iea & 0x1) << 6) | ((drEn & 0x1) << 7); }
        public void setValue(long _value)
        {
            strt = (int)((_value >> 0) & 0x1);
            vfilt = (int)((_value >> 2) & 0x1);
            int1En = (int)((_value >> 3) & 0x1);
            int2En = (int)((_value >> 4) & 0x1);
            iel = (int)((_value >> 5) & 0x1);
            iea = (int)((_value >> 6) & 0x1);
            drEn = (int)((_value >> 7) & 0x1);
        }
    }
    class CtrlReg5Register extends Register
    {
        CtrlReg5Register(RegisterManager regManager) { super(regManager, 0x24, 2, false); }

        int sim;
        int st1;
        int st2;
        int fscale;
        int bandwidth;

                public Fscales getFscale() { for (Fscales b : Fscales.values()) { if(b.getVal() == fscale) return b; } return Fscales.values()[0]; }
                public void setFscale(Fscales enumVal) { fscale = enumVal.getVal(); }
                public Bandwidths getBandwidth() { for (Bandwidths b : Bandwidths.values()) { if(b.getVal() == bandwidth) return b; } return Bandwidths.values()[0]; }
                public void setBandwidth(Bandwidths enumVal) { bandwidth = enumVal.getVal(); }

        public CtrlReg5Register read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((sim & 0x1) << 0) | ((st1 & 0x1) << 1) | ((st2 & 0x1) << 2) | ((fscale & 0x7) << 3) | ((bandwidth & 0x7) << 6); }
        public void setValue(long _value)
        {
            sim = (int)((_value >> 0) & 0x1);
            st1 = (int)((_value >> 1) & 0x1);
            st2 = (int)((_value >> 2) & 0x1);
            fscale = (int)((_value >> 3) & 0x7);
            bandwidth = (int)((_value >> 6) & 0x7);
        }
    }
    class CtrlReg6Register extends Register
    {
        CtrlReg6Register(RegisterManager regManager) { super(regManager, 0x25, 1, false); }

        int p2boot;
        int p1overrun;
        int p1wtm;
        int p1empty;
        int addInc;
        int wtmEn;
        int fifoEn;
        int boot;


        public CtrlReg6Register read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((p2boot & 0x1) << 0) | ((p1overrun & 0x1) << 1) | ((p1wtm & 0x1) << 2) | ((p1empty & 0x1) << 3) | ((addInc & 0x1) << 4) | ((wtmEn & 0x1) << 5) | ((fifoEn & 0x1) << 6) | ((boot & 0x1) << 7); }
        public void setValue(long _value)
        {
            p2boot = (int)((_value >> 0) & 0x1);
            p1overrun = (int)((_value >> 1) & 0x1);
            p1wtm = (int)((_value >> 2) & 0x1);
            p1empty = (int)((_value >> 3) & 0x1);
            addInc = (int)((_value >> 4) & 0x1);
            wtmEn = (int)((_value >> 5) & 0x1);
            fifoEn = (int)((_value >> 6) & 0x1);
            boot = (int)((_value >> 7) & 0x1);
        }
    }
    class StatusRegister extends Register
    {
        StatusRegister(RegisterManager regManager) { super(regManager, 0x27, 1, false); }

        int xda;
        int yda;
        int zda;
        int zyxda;
        int xor;
        int yor;
        int zor;
        int zyxor;


        public StatusRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((xda & 0x1) << 0) | ((yda & 0x1) << 1) | ((zda & 0x1) << 2) | ((zyxda & 0x1) << 3) | ((xor & 0x1) << 4) | ((yor & 0x1) << 5) | ((zor & 0x1) << 6) | ((zyxor & 0x1) << 7); }
        public void setValue(long _value)
        {
            xda = (int)((_value >> 0) & 0x1);
            yda = (int)((_value >> 1) & 0x1);
            zda = (int)((_value >> 2) & 0x1);
            zyxda = (int)((_value >> 3) & 0x1);
            xor = (int)((_value >> 4) & 0x1);
            yor = (int)((_value >> 5) & 0x1);
            zor = (int)((_value >> 6) & 0x1);
            zyxor = (int)((_value >> 7) & 0x1);
        }
    }
    class OutXRegister extends Register
    {
        OutXRegister(RegisterManager regManager) { super(regManager, 0x28, 2, false); }

        int value;


        public OutXRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFFFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFFFF);
        }
    }
    class OutYRegister extends Register
    {
        OutYRegister(RegisterManager regManager) { super(regManager, 0x2a, 2, false); }

        int value;


        public OutYRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFFFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFFFF);
        }
    }
    class OutZRegister extends Register
    {
        OutZRegister(RegisterManager regManager) { super(regManager, 0x2c, 2, false); }

        int value;


        public OutZRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((value & 0xFFFF) << 0); }
        public void setValue(long _value)
        {
            value = (int)((_value >> 0) & 0xFFFF);
        }
    }
    class FifoCtrlRegister extends Register
    {
        FifoCtrlRegister(RegisterManager regManager) { super(regManager, 0x2e, 1, false); }

        int wtmp;
        int fifoMode;

                public FifoModes getFifoMode() { for (FifoModes b : FifoModes.values()) { if(b.getVal() == fifoMode) return b; } return FifoModes.values()[0]; }
                public void setFifoMode(FifoModes enumVal) { fifoMode = enumVal.getVal(); }

        public FifoCtrlRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((wtmp & 0x1F) << 0) | ((fifoMode & 0x7) << 5); }
        public void setValue(long _value)
        {
            wtmp = (int)((_value >> 0) & 0x1F);
            fifoMode = (int)((_value >> 5) & 0x7);
        }
    }
    class FifoSrcRegister extends Register
    {
        FifoSrcRegister(RegisterManager regManager) { super(regManager, 0x2f, 1, false); }

        int fss;
        int empty;
        int ovrnFifo;
        int wtm;


        public FifoSrcRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((fss & 0x1F) << 0) | ((empty & 0x1) << 5) | ((ovrnFifo & 0x1) << 6) | ((wtm & 0x1) << 7); }
        public void setValue(long _value)
        {
            fss = (int)((_value >> 0) & 0x1F);
            empty = (int)((_value >> 5) & 0x1);
            ovrnFifo = (int)((_value >> 6) & 0x1);
            wtm = (int)((_value >> 7) & 0x1);
        }
    }
}
